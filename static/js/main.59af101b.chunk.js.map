{"version":3,"sources":["AddCard.js","App.js","serviceWorker.js","index.js"],"names":["AddCard","props","makeDayInput","options","push","value","selected","disabled","hidden","i","grid","week","id","makeTimeInput","string","makeHeightInput","makeMessageInput","type","this","Component","postData","JSON","parse","localStorage","getItem","App","incYear","setState","year","state","calGrid","getCalendarDates","month","saveTimeState","decYear","incMonth","decMonth","incWeek","decWeek","y","m","w","setItem","stringify","createTimeColumn","col","class","className","createBoard","console","log","cols","cards","placeExistingCards","createColumn","createBlankColumn","day","boxes","currDay","dayNames","hrs","onDrop","drop","onDragOver","allowDrop","placeValidCards","isLeapYear","getMaxDays","cal","cd","Date","getDay","d_i","j","makeCard","idName","height","msg","draggable","style","onDragStart","drag","ev","dataTransfer","setData","target","preventDefault","data","getData","card","document","getElementById","isValidMove","appendChild","split","SaveJSON","refreshPage","dropRemove","removeCard","test","checkOntopOfExistingCard","getAllCardsOnBoard","Number","list","board","length","cardVals","h","d","t","curr_day","divVals","div_year","div_month","div_day","div_time","querySelectorAll","allCards","map","postDetail","index","card_name","start_time","message","time","cardString","saveState","addCard","JSONObject","splice","recomputeJSONIdTags","window","location","reload","currDate","currYear","currMonth","currWeek","getFullYear","getMonth","monthNames","name","content","onClick","src","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59af101b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddCard extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.makeDayInput()}<br></br>\r\n                {this.makeTimeInput()}<br></br>\r\n                {this.makeHeightInput()}<br></br>\r\n                {this.makeMessageInput()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    makeDayInput = () => {\r\n        var options = [];\r\n        options.push(<option value=\"\" selected disabled hidden>Day</option>);\r\n        for(var i = 0; i < 7; i++){\r\n            if(this.props.grid[this.props.week - 1][i] == 0) continue;\r\n            options.push(<option value={this.props.grid[this.props.week - 1][i]}>{this.props.grid[this.props.week - 1][i]}</option>);\r\n        }\r\n        return(\r\n            <select id=\"addCard_day\">\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    makeTimeInput = () => {\r\n        var options = [];\r\n        options.push(<option value=\"\" selected disabled hidden>Start Time</option>);\r\n        for(var i = 0; i < 24; i++){\r\n            var string = i + \":00\";\r\n            options.push(<option value={i}>{string}</option>);\r\n        }\r\n        return(\r\n        <select id=\"addCard_time\">\r\n            {options}\r\n        </select>\r\n        )\r\n    }\r\n\r\n    makeHeightInput = () => {\r\n        var options = [];\r\n        options.push(<option value=\"\" selected disabled hidden>Length</option>);\r\n        for(var i = 0; i < 24; i++){\r\n            var string = i;\r\n            options.push(<option value={i}>{string}</option>);\r\n        }\r\n        return(\r\n        <select id=\"addCard_height\">\r\n            {options}\r\n        </select>\r\n        )\r\n    }\r\n\r\n    makeMessageInput = () => {\r\n        return(\r\n        <input type=\"text\" id=\"addCard_message\">\r\n        </input>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default AddCard;\r\n","import React, { Component } from 'react';\nimport './styles.css';\nimport AddCard from './AddCard.js';\n\nvar postData = JSON.parse(localStorage.getItem('cards'));\nif (postData == null) postData = [];\nclass App extends Component {\n    constructor(props){\n        super(props);\n        let currDate = new Date();\n        let currYear = JSON.parse(localStorage.getItem('year'));\n        let currMonth = JSON.parse(localStorage.getItem('month'));\n        let currWeek = JSON.parse(localStorage.getItem('week'));\n        console.log(currYear + \"+\" + currMonth + \"+\" + currWeek);\n        currYear = currYear == null ? currDate.getFullYear() : Number(currYear);\n        currMonth = currMonth == null ? currDate.getMonth() + 1 : Number(currMonth);\n        currWeek = currWeek == null ? 1 : Number(currWeek);\n        this.state = {\n            year: currYear,\n            month: currMonth,\n            week: currWeek,\n            monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n            dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            calGrid: this.getCalendarDates(currYear, currMonth)\n        };\n    }\n    render() {\n        return(\n            <div className=\"App\" id=\"app\">\n                <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\"></meta>\n                <header className=\"header MainText\">\n                    HOME\n                </header>\n\n                <body className=\"body\">\n                    <div className=\"Center MainText\">\n                        <button onClick={this.decYear} id=\"decYearButton\" className=\"decButton\">&lt;</button>                \n                        {this.state.year}\n                        <button onClick={this.incYear} id=\"incYearButton\" className=\"incButton\">&gt;</button>\n                    </div>\n\n                    <div className=\"Center MainText\">\n                        <button onClick={this.decMonth} id=\"decMonthButton\" className=\"decButton\">&lt;</button>\n                        {this.state.monthNames[this.state.month - 1]}\n                        <button onClick={this.incMonth} id=\"incMonthButton\" className=\"incButton\">&gt;</button>\n                    </div>\n\n                    <div className=\"Center MainText\">\n                        <button onClick={this.decWeek} id=\"decWeekButton\" className=\"decButton\">&lt;</button>\n                        {\"Week \" + this.state.week}\n                        <button onClick={this.incWeek} id=\"incWeekButton\" className=\"incButton\">&gt;</button>\n                    </div>\n                    \n                    <div id=\"board_wrapper\" className=\"Center\">\n                        {this.createBoard()}\n                    </div>\n\n                    <div id=\"addCard\" className=\"addCard\">\n                        <AddCard grid={this.state.calGrid} week={this.state.week}/>\n                        <button onClick = {this.addCard}>\n                            Add a new card!\n                        </button>\n                    </div>\n                    <img \n                        src=\"bin-icon.png\"\n                        className = \"bin\"\n                        onDrop={this.dropRemove}\n                        onDragOver={this.allowDrop}            \n                    >\n\n                    </img>\n                </body>\n            </div>\n        );\n    }\n\n    incYear = () => {\n        this.setState({year : this.state.year + 1, week : 1, calGrid : this.getCalendarDates(this.state.year + 1, this.state.month)});\n        this.saveTimeState(this.state.year + 1, this.state.month, 1); \n    }\n\n    decYear = () => {\n        this.setState({year : this.state.year - 1, week : 1, calGrid : this.getCalendarDates(this.state.year - 1, this.state.month)});\n        this.saveTimeState(this.state.year - 1, this.state.month, 1); \n    }\n    \n    incMonth = () => {\n        if(this.state.month == 12){\n            this.setState({year : this.state.year + 1, month : 1, week : 1, calGrid : this.getCalendarDates(this.state.year + 1, 1)});\n            this.saveTimeState(this.state.year + 1, 1, 1); \n        }else{\n            this.setState({month : this.state.month + 1, week : 1, calGrid : this.getCalendarDates(this.state.year, this.state.month + 1)});  \n            this.saveTimeState(this.state.year, this.state.month + 1, 1); \n        }\n    }\n    \n    decMonth = () => {\n        if(this.state.month == 1){\n            this.setState({year : this.state.year - 1, month : 12, week : 1, calGrid : this.getCalendarDates(this.state.year - 1, 12)});\n            this.saveTimeState(this.state.year - 1, 12, 1);\n        }else{\n            this.setState({month : this.state.month - 1, week : 1, calGrid : this.getCalendarDates(this.state.year, this.state.month - 1)}); \n            this.saveTimeState(this.state.year, this.state.month - 1, 1);\n        }\n    }\n    \n    incWeek = () => {\n        if(this.state.week < 6){\n            this.setState({week : this.state.week + 1});\n            this.saveTimeState(this.state.year, this.state.month, this.state.week + 1);\n        }\n    }\n    \n    decWeek = () => {\n        if(this.state.week > 1){\n            this.setState({week : this.state.week - 1});\n            this.saveTimeState(this.state.year, this.state.month, this.state.week - 1);\n        }\n    }\n    \n    saveTimeState = (y, m, w) => {     \n        localStorage.setItem('year', JSON.stringify(y));\n        localStorage.setItem('month', JSON.stringify(m));\n        localStorage.setItem('week', JSON.stringify(w));\n    }\n\n    createTimeColumn = () => {\n        var col = [];\n        for(var i = 0; i < 24; i++){\n            col.push(<div \n                        class=\"outer\"\n                        className=\"box Gray Text\"               \n                    >\n                        {i+\":00\"}\n                    </div>);\n        }\n        return(\n            <div className=\"Column\" id=\"time_column\">\n                <div className=\"box White\"></div>\n                {col}\n            </div>\n        )        \n    }\n\n    createBoard = () => {\n        console.log(this.state.year + \"_\" + this.state.month + \"_\" + this.state.week);\n        const cols = [];\n        const cards = this.placeExistingCards();\n        cols.push(this.createTimeColumn());\n        for(var i = 0; i < 7; i++){\n            if(this.state.calGrid[this.state.week - 1][i]){\n                cols.push(this.createColumn(i, cards));\n            }else{\n                cols.push(this.createBlankColumn(i));\n            }\n        }\n        return(\n            <div id=\"board\" className=\"Calendar\">\n                {cols}\n            </div>\n        );\n    }\n\n    createBlankColumn = (day) => {\n        const boxes = [];\n        const currDay = this.state.dayNames[day];\n        for(var i = 0; i < 24; i++){\n            boxes.push(<div \n                        className=\"clearBox\"               \n                        >\n                        </div>);\n        }\n\n        return(\n            <div className=\"Column\" id={day}>\n                <div className=\"box Gray Text\">{currDay}</div>\n                {boxes}\n            </div>\n        )        \n    }\n\n    createColumn = (day, cards) => {\n        const hrs = [];\n        const currDay = this.state.dayNames[day];\n        for(var i = 0; i < 24; i++){\n            hrs.push(<div id = {\"box\" + \"_\" + this.state.year + \"_\" + this.state.month + \"_\" + this.state.calGrid[this.state.week - 1][day] + \"_\" + i} \n                        class=\"outer\"\n                        className=\"box LightGray Text\"\n                        onDrop={this.drop}\n                        onDragOver={this.allowDrop}                    \n                    >\n                        {this.placeValidCards(cards, this.state.calGrid[this.state.week - 1][day], i)}\n                    </div>);\n        }\n\n        return(\n            <div className=\"Column\" id={day}>\n                <div className=\"box Gray Text\">{this.state.calGrid[this.state.week - 1][day] + \" \" + currDay}</div>\n                {hrs}\n            </div>\n        )\n    }\n\n    isLeapYear = (y) => {\n        return ((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0);\n    }\n\n    getMaxDays = (y, m) => {\n        const noDays = [31, this.isLeapYear(y) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        return noDays[m - 1];\n    }\n\n    getCalendarDates = (y, m) => {\n        const cal =[[],[],[],[],[],[]];\n        //cd = what DAY the 1st lies on for the given date\n        var d = new Date(y + '-' + m + '-' + 1);\n        var cd = d.getDay();\n\n        var d_i = 1;\n        //foreach [week, days] DO: fill arr \n        for(var i = 0; i < 6; i++){\n            for(var j = 0; j < 7; j++){\n                //if first occurrence\n                if(d_i == 1 && i == 0){\n                    cal[i][j] = cd == j ? 1 : 0;\n                //if past max days fill with 0's\n                }else if(d_i > this.getMaxDays(y, m)){\n                    cal[i][j] = 0;\n                }else{\n                    cal[i][j] = d_i;\n                }\n                if(cal[i][j] != 0) d_i++;\n            }\n        }\n        return cal;\n    }\n\n    makeCard = (idName, height, msg) =>{\n        return (\n            <div \n                id={idName}\n                class=\"inner\"\n                className=\"LightSmoothGreen Text card\" \n                draggable=\"true\" \n                style={height}\n                onDragStart={this.drag}\n            >\n                {msg}\n            </div>\n        )\n    }\n\n    drag = (ev) => {\n        ev.dataTransfer.setData(\"text\", ev.target.id);\n    }\n\n    drop = (ev) => {\n        ev.preventDefault();\n        var data = ev.dataTransfer.getData(\"text\");\n        var card = document.getElementById(data);\n        if(!this.isValidMove(ev, card)) return;\n        console.log(card);\n        ev.target.appendChild(card);\n        card.id = \"card\" + \"_\" + card.id.split(\"_\")[1] + \"_\" + ev.target.id + \"_\" + card.id.split(\"_\")[7];\n        this.SaveJSON(ev, card);\n        //this.removeCard(postData.length - 1);\n        console.log(card.id);\n        //TEMPORARY FIX FOR A BUG VVV\n        this.refreshPage();\n    }\n\n    dropRemove = (ev) => {\n        ev.preventDefault();\n        var data = ev.dataTransfer.getData(\"text\");\n        var card = document.getElementById(data);\n        this.removeCard(card.id.split(\"_\")[7]);\n        this.refreshPage();\n    }\n\n    isValidMove = (ev, card) => {\n        var pattern = /^box.+$/;\n        if(!pattern.test(ev.target.id)) return false;\n        if(!this.checkOntopOfExistingCard(ev, card, this.getAllCardsOnBoard())) return false;\n        if(Number(ev.target.id.split(\"_\")[4]) + Number(card.id.split(\"_\")[1]) > 24) return false;\n        return true;\n    }\n    \n    checkOntopOfExistingCard = (ev, card, list) => {\n        const board = [[], [], [], [], [], [], []];\n        for(var i = 0; i < list.length; i++){\n            if(card == list[i]) continue;\n            var cardVals = list[i].id.split(\"_\");\n            var h = cardVals[1]; var y = cardVals[3]; var m = cardVals[4]; var d = cardVals[5]; var t = cardVals[6];\n            var date = new Date(y + '-' + m + '-' + d);\n            var curr_day = date.getDay();\n            for(var j = 0; j < h; j++){\n                board[curr_day][Number(t) + Number(j)] = 1;\n            }\n        }\n\n        var divVals = ev.target.id.split(\"_\");\n        var div_year = divVals[1]; var div_month = divVals[2]; var div_day = divVals[3]; var div_time = divVals[4]; \n        var date = new Date(div_year + '-' + div_month + '-' + div_day);\n        var curr_day = date.getDay();\n        var height = card.id.split(\"_\")[1];\n        for(var i = 0; i < height; i++){\n            if(board[curr_day][Number(div_time) + Number(i)] == 1){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    getAllCardsOnBoard = () => {\n        var list = document.querySelectorAll('[id*=\"card\"]');\n        return list;\n    }\n\n    allowDrop = (ev) => {\n        ev.preventDefault();\n    }\n\n    placeExistingCards = () => {\n        var allCards = [];\n        postData.map((postDetail, index)=> {\n            var h = 20;\n            var br = 2;\n            //If card belongs on the current board\n            if(postDetail.year == this.state.year && postDetail.month == this.state.month && postDetail.week == this.state.week){\n                var height = {height: h*(postDetail.length) + br*(postDetail.length-1)}\n                var card_name = \"card\" + \"_\" + postDetail.length + \"_\" + \"box\" + \"_\" + postDetail.year + \"_\" + postDetail.month + \"_\" + postDetail.day + \"_\" + postDetail.start_time + \"_\" + postDetail.id;\n                var card = this.makeCard(card_name, height, postDetail.message);\n                allCards.push(card);\n            }\n        })\n        return allCards;\n    }\n\n    placeValidCards = (cards, d, time) => {\n        for(var i = 0; i < cards.length; i++){\n            var cardString = cards[i].props.id.split(\"_\");\n            //console.log(cardString[4] + \"_\" + d + \"_\" + cardString[5] + \"_\" + time);\n            if(cardString[5] == d && cardString[6] == time){\n                return cards[i];\n            }\n        }\n        return;\n    }\n\n    SaveJSON = (ev, card) => {\n        var id = card.id.split(\"_\")[7];\n        postData[id].day = ev.target.id.split(\"_\")[3];\n        postData[id].start_time = ev.target.id.split(\"_\")[4];\n        this.saveState();\n    }\n\n    saveState = () =>{\n        localStorage.setItem('cards', JSON.stringify(postData));\n        console.log(localStorage.getItem('cards'));\n    }\n\n    addCard = () => {\n        console.log(\"making card\");\n        var time = document.getElementById(\"addCard_time\");\n        var height = document.getElementById(\"addCard_height\");\n        var msg = document.getElementById(\"addCard_message\");\n        var d = document.getElementById(\"addCard_day\");\n        if(time == null || height == null || msg == null || d == null){\n            console.log(\"error\");\n            return;\n        }\n        \n        time = Number(time.value);\n        height = Number(height.value);\n        msg = msg.value;\n        d = d.value;\n        var id = 0;\n        if(postData.length != 0) id = postData[postData.length - 1].id + 1;\n        var y = this.state.year;\n        var m = this.state.month;\n        var w = this.state.week;\n\n        var JSONObject = {\n            \"id\": id,\n            \"year\": y,\n            \"month\": m,\n            \"day\": d,\n            \"week\": w,\n            \"start_time\": time,\n            \"length\": height,\n            \"message\": msg\n        }\n\n        postData.push(JSONObject);\n        this.saveState();\n        this.refreshPage();\n    }\n\n    removeCard = (id) => {\n        postData.splice(id, 1);\n        this.recomputeJSONIdTags();\n        this.refreshPage();\n    }\n\n    recomputeJSONIdTags = () => {\n        for(var i = 0; i < postData.length; i++){\n            postData[i].id = i;\n        }\n        this.saveState();\n    }\n\n    refreshPage = () => {\n        window.location.reload();\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}